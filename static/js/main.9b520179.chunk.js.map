{"version":3,"sources":["components/Calendar/styles.js","util/calendar.js","components/Calendar/index.js","components/Datepicker/styles.js","components/Datepicker/index.js","App.js","serviceWorker.js","index.js"],"names":["Arrow","styled","button","_templateObject","ArrowLeft","_templateObject2","ArrowRight","_templateObject3","CalendarContainer","div","_templateObject4","CalendarHeader","_templateObject5","CalendarGrid","_templateObject6","CalendarMonth","_templateObject7","CalendarCell","_templateObject8","props","index","CalendarDay","_templateObject9","CalendarDate","_templateObject10","inMonth","Math","floor","HighlightedCalendarDate","_templateObject11","TodayCalendarDate","_templateObject12","THIS_YEAR","Date","getFullYear","THIS_MONTH","getMonth","WEEK_DAYS","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","CALENDAR_MONTHS","January","February","March","April","May","June","July","August","September","October","November","December","zeroPad","value","length","concat","padStart","getMonthDays","month","arguments","undefined","year","includes","isDate","date","Object","prototype","toString","call","isValidDate","Number","isNaN","valueOf","isSameMonth","basedate","basedateMonth","basedateYear","dateMonth","dateYear","isSameDay","basedateDate","getDate","dateDate","getDateISO","join","getPreviousMonth","getNextMonth","calendar","monthDays","daysFromPrevMonth","getDay","getMonthFirstDay","daysFromNextMonth","CALENDAR_WEEKS","_getPreviousMonth","prevMonth","prevMonthYear","_getNextMonth","nextMonth","nextMonthYear","prevMonthDays","prevMonthDates","toConsumableArray","Array","map","n","day","thisMonthDates","nextMonthDates","Calendar","state","_this","resolveStateFromProp","today","getCalendarDates","_this$state","current","calendarMonth","calendarYear","renderMonthAndYear","_this$state2","monthname","keys","max","min","react_default","a","createElement","onMouseDown","handlePrevious","onMouseUp","clearPressureTimer","title","handleNext","renderDayLabel","daylabel","toUpperCase","key","renderCalendarDate","_this$state3","_date","isToday","isCurrent","onClick","gotoDate","toDateString","DateComponent","Styled","assign","evt","preventDefault","onDateChanged","setState","resolveStateFromDate","gotoPreviousMonth","_this$state4","gotoNextMonth","_this$state5","gotoPreviousYear","gotoNextYear","handlePressure","fn","pressureTimeout","setTimeout","pressureTimer","setInterval","clearInterval","clearTimeout","shiftKey","clearDayTimeout","dayTimeout","isDateObject","this","_this2","now","ms","setHours","prevProps","_this$props","prevDate","react","Component","DatePickerContainer","styles_templateObject","DatePickerFormGroup","FormGroup","styles_templateObject2","DatePickerLabel","Label","styles_templateObject3","DatePickerInput","Input","styles_templateObject4","DatePickerDropdown","Dropdown","styles_templateObject5","DatePickerDropdownToggle","DropdownToggle","styles_templateObject6","DatePickerDropdownMenu","DropdownMenu","styles_templateObject7","Datepicker","calendarOpen","toggleCalendar","handleChange","handleDateChange","currentDate","newDate","dateISO","label","type","split","onChange","readOnly","placeholder","isOpen","toggle","color","components_Calendar","React","App","className","components_Datepicker","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b520179.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Arrow = styled.button`\r\n  appearance: none;\r\n  user-select: none;\r\n  outline: none !important;\r\n  display: inline-block;\r\n  position: relative;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  border: none;\r\n  border-top: 1.6em solid transparent;\r\n  border-bottom: 1.6em solid transparent;\r\n  transition: all 0.25s ease-out;\r\n`;\r\n\r\nexport const ArrowLeft = styled(Arrow)`\r\n  border-right: 2.4em solid #ccc;\r\n  left: 1.5rem;\r\n  :hover {\r\n    border-right-color: #06c;\r\n  }\r\n`;\r\n\r\nexport const ArrowRight = styled(Arrow)`\r\n  border-left: 2.4em solid #ccc;\r\n  right: 1.5rem;\r\n  :hover {\r\n    border-left-color: #06c;\r\n  }\r\n`;\r\n\r\nexport const CalendarContainer = styled.div`\r\n  font-size: 5px;\r\n  border: 2px solid #06c;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const CalendarHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const CalendarGrid = styled.div`\r\n  display: grid;\r\n  grid-template: repeat(7, auto) / repeat(7, auto);\r\n`;\r\n\r\nexport const CalendarMonth = styled.div`\r\n  font-weight: 500;\r\n  font-size: 5em;\r\n  color: #06c;\r\n  text-align: center;\r\n  padding: 0.5em 0.25em;\r\n  word-spacing: 5px;\r\n  user-select: none;\r\n`;\r\n\r\nexport const CalendarCell = styled.div`\r\n  text-align: center;\r\n  align-self: center;\r\n  letter-spacing: 0.1rem;\r\n  padding: 0.6em 0.25em;\r\n  user-select: none;\r\n  grid-column: ${props => (props.index % 7) + 1} / span 1;\r\n`;\r\n\r\nexport const CalendarDay = styled(CalendarCell)`\r\n  font-weight: 600;\r\n  font-size: 2.25em;\r\n  color: #06c;\r\n  border-top: 2px solid #06c;\r\n  border-bottom: 2px solid #06c;\r\n  border-right: ${props => ((props.index % 7) + 1 === 7 ? `none` : `2px solid #06c`)};\r\n`;\r\n\r\nexport const CalendarDate = styled(CalendarCell)`\r\n  font-weight: ${props => (props.inMonth ? 500 : 300)};\r\n  font-size: 4em;\r\n  cursor: pointer;\r\n  border-bottom: ${props => ((props.index + 1) / 7 <= 5 ? `1px solid #ddd` : `none`)};\r\n  border-right: ${props => ((props.index % 7) + 1 === 7 ? `none` : `1px solid #ddd`)};\r\n  color: ${props => (props.inMonth ? `#333` : `#ddd`)};\r\n  grid-row: ${props => Math.floor(props.index / 7) + 2} / span 1;\r\n  transition: all 0.4s ease-out;\r\n  :hover {\r\n    color: #06c;\r\n    background: rgba(0, 102, 204, 0.075);\r\n  }\r\n`;\r\n\r\nexport const HighlightedCalendarDate = styled(CalendarDate)`\r\n  color: #fff !important;\r\n  background: #06c !important;\r\n  position: relative;\r\n  ::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: -1px;\r\n    left: -1px;\r\n    width: calc(100% + 2px);\r\n    height: calc(100% + 2px);\r\n    border: 2px solid #06c;\r\n  }\r\n`;\r\n\r\nexport const TodayCalendarDate = styled(HighlightedCalendarDate)`\r\n  color: #06c !important;\r\n  background: transparent !important;\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    border-bottom: 0.75em solid #06c;\r\n    border-left: 0.75em solid transparent;\r\n    border-top: 0.75em solid transparent;\r\n  }\r\n  :hover {\r\n    color: #06c !important;\r\n    background: rgba(0, 102, 204, 0.075) !important;\r\n  }\r\n`;\r\n","// (int) The current year\r\nexport const THIS_YEAR = +new Date().getFullYear();\r\n\r\n// (int) The current month starting from 1 - 12\r\n// 1 => January, 12 => December\r\nexport const THIS_MONTH = +new Date().getMonth() + 1;\r\n\r\n// Week days names and shortnames\r\nexport const WEEK_DAYS = {\r\n  Sunday: \"Sun\",\r\n  Monday: \"Mon\",\r\n  Tuesday: \"Tue\",\r\n  Wednesday: \"Wed\",\r\n  Thursday: \"Thu\",\r\n  Friday: \"Fri\",\r\n  Saturday: \"Sat\"\r\n};\r\n\r\n// Calendar months names and shortnames\r\nexport const CALENDAR_MONTHS = {\r\n  January: \"Jan\",\r\n  February: \"Feb\",\r\n  March: \"Mar\",\r\n  April: \"Apr\",\r\n  May: \"May\",\r\n  June: \"Jun\",\r\n  July: \"Jul\",\r\n  August: \"Aug\",\r\n  September: \"Sep\",\r\n  October: \"Oct\",\r\n  November: \"Nov\",\r\n  December: \"Dec\"\r\n};\r\n\r\n// Weeks displayed on calendar\r\nexport const CALENDAR_WEEKS = 6;\r\n\r\n// Pads a string value with leading zeroes(0) until length is reached\r\n// For example: zeroPad(5, 2) => \"05\"\r\nexport const zeroPad = (value, length) => {\r\n  return `${value}`.padStart(length, \"0\");\r\n};\r\n\r\n// (int) Number days in a month for a given year from 28 - 31\r\nexport const getMonthDays = (month = THIS_MONTH, year = THIS_YEAR) => {\r\n  const months30 = [4, 6, 9, 11];\r\n  const leapYear = year % 4 === 0;\r\n\r\n  return month === 2 ? (leapYear ? 29 : 28) : months30.includes(month) ? 30 : 31;\r\n};\r\n\r\n// (int) First day of the month for a given year from 1 - 7\r\n// 1 => Sunday, 7 => Saturday\r\nexport const getMonthFirstDay = (month = THIS_MONTH, year = THIS_YEAR) => {\r\n  return +new Date(`${year}-${zeroPad(month, 2)}-01`).getDay() + 1;\r\n};\r\n\r\n// (bool) Checks if a value is a date - this is just a simple check\r\nexport const isDate = date => {\r\n  const isDate = Object.prototype.toString.call(date) === \"[object Date]\";\r\n  const isValidDate = date && !Number.isNaN(date.valueOf());\r\n\r\n  return isDate && isValidDate;\r\n};\r\n\r\n// (bool) Checks if two date values are of the same month and year\r\nexport const isSameMonth = (date, basedate = new Date()) => {\r\n  if (!(isDate(date) && isDate(basedate))) return false;\r\n\r\n  const basedateMonth = +basedate.getMonth() + 1;\r\n  const basedateYear = basedate.getFullYear();\r\n\r\n  const dateMonth = +date.getMonth() + 1;\r\n  const dateYear = date.getFullYear();\r\n\r\n  return +basedateMonth === +dateMonth && +basedateYear === +dateYear;\r\n};\r\n\r\n// (bool) Checks if two date values are the same day\r\nexport const isSameDay = (date, basedate = new Date()) => {\r\n  if (!(isDate(date) && isDate(basedate))) return false;\r\n\r\n  const basedateDate = basedate.getDate();\r\n  const basedateMonth = +basedate.getMonth() + 1;\r\n  const basedateYear = basedate.getFullYear();\r\n\r\n  const dateDate = date.getDate();\r\n  const dateMonth = +date.getMonth() + 1;\r\n  const dateYear = date.getFullYear();\r\n\r\n  return (\r\n    +basedateDate === +dateDate && +basedateMonth === +dateMonth && +basedateYear === +dateYear\r\n  );\r\n};\r\n\r\n// (string) Formats the given date as YYYY-MM-DD\r\n// Months and Days are zero padded\r\nexport const getDateISO = (date = new Date()) => {\r\n  if (!isDate(date)) return null;\r\n\r\n  return [date.getFullYear(), zeroPad(+date.getMonth() + 1, 2), zeroPad(+date.getDate(), 2)].join(\r\n    \"-\"\r\n  );\r\n};\r\n\r\n// ({month, year}) Gets the month and year before the given month and year\r\n// For example: getPreviousMonth(1, 2000) => {month: 12, year: 1999}\r\n// while: getPreviousMonth(12, 2000) => {month: 11, year: 2000}\r\nexport const getPreviousMonth = (month, year) => {\r\n  const prevMonth = month > 1 ? month - 1 : 12;\r\n  const prevMonthYear = month > 1 ? year : year - 1;\r\n\r\n  return { month: prevMonth, year: prevMonthYear };\r\n};\r\n\r\n// ({month, year}) Gets the month and year after the given month and year\r\n// For example: getNextMonth(1, 2000) => {month: 2, year: 2000}\r\n// while: getNextMonth(12, 2000) => {month: 1, year: 2001}\r\nexport const getNextMonth = (month, year) => {\r\n  const nextMonth = month < 12 ? month + 1 : 1;\r\n  const nextMonthYear = month < 12 ? year : year + 1;\r\n\r\n  return { month: nextMonth, year: nextMonthYear };\r\n};\r\n\r\nexport default (month = THIS_MONTH, year = THIS_YEAR) => {\r\n  // Get number of days in the month and the month's first day\r\n\r\n  const monthDays = getMonthDays(month, year);\r\n  const monthFirstDay = getMonthFirstDay(month, year);\r\n\r\n  // Get number of days to be displayed from previous and next months\r\n  // These ensure a total of 42 days (6 weeks) displayed on the calendar\r\n\r\n  const daysFromPrevMonth = monthFirstDay - 1;\r\n  const daysFromNextMonth = CALENDAR_WEEKS * 7 - (daysFromPrevMonth + monthDays);\r\n\r\n  // Get the previous and next months and years\r\n\r\n  const { month: prevMonth, year: prevMonthYear } = getPreviousMonth(month, year);\r\n  const { month: nextMonth, year: nextMonthYear } = getNextMonth(month, year);\r\n\r\n  // Get number of days in previous month\r\n  const prevMonthDays = getMonthDays(prevMonth, prevMonthYear);\r\n\r\n  // Builds dates to be displayed from previous month\r\n\r\n  const prevMonthDates = [...new Array(daysFromPrevMonth)].map((n, index) => {\r\n    const day = index + 1 + (prevMonthDays - daysFromPrevMonth);\r\n    return [prevMonthYear, zeroPad(prevMonth, 2), zeroPad(day, 2)];\r\n  });\r\n\r\n  // Builds dates to be displayed from current month\r\n\r\n  const thisMonthDates = [...new Array(monthDays)].map((n, index) => {\r\n    const day = index + 1;\r\n    return [year, zeroPad(month, 2), zeroPad(day, 2)];\r\n  });\r\n\r\n  // Builds dates to be displayed from next month\r\n\r\n  const nextMonthDates = [...new Array(daysFromNextMonth)].map((n, index) => {\r\n    const day = index + 1;\r\n    return [nextMonthYear, zeroPad(nextMonth, 2), zeroPad(day, 2)];\r\n  });\r\n\r\n  // Combines all dates from previous, current and next months\r\n  return [...prevMonthDates, ...thisMonthDates, ...nextMonthDates];\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Styled from \"./styles\";\r\nimport calendar, {\r\n  isDate,\r\n  isSameDay,\r\n  isSameMonth,\r\n  getDateISO,\r\n  getNextMonth,\r\n  getPreviousMonth,\r\n  WEEK_DAYS,\r\n  CALENDAR_MONTHS\r\n} from \"../../util/calendar\";\r\n\r\nclass Calendar extends Component {\r\n  state = { ...this.resolveStateFromProp(), today: new Date() };\r\n\r\n  resolveStateFromDate(date) {\r\n    const isDateObject = isDate(date);\r\n    const _date = isDateObject ? date : new Date();\r\n\r\n    return {\r\n      current: isDateObject ? date : null,\r\n      month: +_date.getMonth() + 1,\r\n      year: _date.getFullYear()\r\n    };\r\n  }\r\n\r\n  resolveStateFromProp() {\r\n    return this.resolveStateFromDate(this.props.date);\r\n  }\r\n\r\n  getCalendarDates = () => {\r\n    const { current, month, year } = this.state;\r\n    const calendarMonth = month || +current.getMonth() + 1;\r\n    const calendarYear = year || current.getFullYear();\r\n\r\n    return calendar(calendarMonth, calendarYear);\r\n  };\r\n\r\n  // Render the month and year header with arrow controls\r\n  // for navigating through months and years\r\n  renderMonthAndYear = () => {\r\n    const { month, year } = this.state;\r\n\r\n    // Resolve the month name from the CALENDAR_MONTHS object map\r\n    const monthname = Object.keys(CALENDAR_MONTHS)[Math.max(0, Math.min(month - 1, 11))];\r\n\r\n    return (\r\n      <Styled.CalendarHeader>\r\n        <Styled.ArrowLeft\r\n          onMouseDown={this.handlePrevious}\r\n          onMouseUp={this.clearPressureTimer}\r\n          title=\"Previous Month\"\r\n        />\r\n\r\n        <Styled.CalendarMonth>\r\n          {monthname} {year}\r\n        </Styled.CalendarMonth>\r\n\r\n        <Styled.ArrowRight\r\n          onMouseDown={this.handleNext}\r\n          onMouseUp={this.clearPressureTimer}\r\n          title=\"Next Month\"\r\n        />\r\n      </Styled.CalendarHeader>\r\n    );\r\n  };\r\n\r\n  // Render the label for day of the week\r\n  // This method is used as a map callback as seen in render()\r\n  renderDayLabel = (day, index) => {\r\n    // Resolve the day of the week label from the WEEK_DAYS object map\r\n    const daylabel = WEEK_DAYS[day].toUpperCase();\r\n\r\n    return (\r\n      <Styled.CalendarDay key={daylabel} index={index}>\r\n        {daylabel}\r\n      </Styled.CalendarDay>\r\n    );\r\n  };\r\n\r\n  // Render a calendar date as returned from the calendar builder function\r\n  // This method is used as a map callback as seen in render()\r\n  renderCalendarDate = (date, index) => {\r\n    const { current, month, year, today } = this.state;\r\n    const _date = new Date(date.join(\"-\"));\r\n\r\n    // Check if calendar date is same day as today\r\n    const isToday = isSameDay(_date, today);\r\n\r\n    // Check if calendar date is same day as currently selected date\r\n    const isCurrent = current && isSameDay(_date, current);\r\n\r\n    // Check if calendar date is in the same month as the state month and year\r\n    const inMonth = month && year && isSameMonth(_date, new Date([year, month, 1].join(\"-\")));\r\n\r\n    // The click handler\r\n    const onClick = this.gotoDate(_date);\r\n\r\n    const props = { index, inMonth, onClick, title: _date.toDateString() };\r\n\r\n    // Conditionally render a styled date component\r\n    const DateComponent = isCurrent\r\n      ? Styled.HighlightedCalendarDate\r\n      : isToday\r\n      ? Styled.TodayCalendarDate\r\n      : Styled.CalendarDate;\r\n\r\n    return (\r\n      <DateComponent key={getDateISO(_date)} {...props}>\r\n        {_date.getDate()}\r\n      </DateComponent>\r\n    );\r\n  };\r\n\r\n  gotoDate = date => evt => {\r\n    evt && evt.preventDefault();\r\n    const { current } = this.state;\r\n    const { onDateChanged } = this.props;\r\n\r\n    !(current && isSameDay(date, current)) &&\r\n      this.setState(this.resolveStateFromDate(date), () => {\r\n        typeof onDateChanged === \"function\" && onDateChanged(date);\r\n      });\r\n  };\r\n\r\n  gotoPreviousMonth = () => {\r\n    const { month, year } = this.state;\r\n    this.setState(getPreviousMonth(month, year));\r\n  };\r\n\r\n  gotoNextMonth = () => {\r\n    const { month, year } = this.state;\r\n    this.setState(getNextMonth(month, year));\r\n  };\r\n\r\n  gotoPreviousYear = () => {\r\n    const { year } = this.state;\r\n    this.setState({ year: year - 1 });\r\n  };\r\n\r\n  gotoNextYear = () => {\r\n    const { year } = this.state;\r\n    this.setState({ year: year + 1 });\r\n  };\r\n\r\n  handlePressure = fn => {\r\n    if (typeof fn === \"function\") {\r\n      fn();\r\n      this.pressureTimeout = setTimeout(() => {\r\n        this.pressureTimer = setInterval(fn, 100);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  clearPressureTimer = () => {\r\n    this.pressureTimer && clearInterval(this.pressureTimer);\r\n    this.pressureTimeout && clearTimeout(this.pressureTimeout);\r\n  };\r\n\r\n  handlePrevious = evt => {\r\n    evt && evt.preventDefault();\r\n    const fn = evt.shiftKey ? this.gotoPreviousYear : this.gotoPreviousMonth;\r\n    this.handlePressure(fn);\r\n  };\r\n\r\n  handleNext = evt => {\r\n    evt && evt.preventDefault();\r\n    const fn = evt.shiftKey ? this.gotoNextYear : this.gotoNextMonth;\r\n    this.handlePressure(fn);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const now = new Date();\r\n    const tomorrow = new Date().setHours(0, 0, 0, 0) + 24 * 60 * 60 * 1000;\r\n    const ms = tomorrow - now;\r\n\r\n    this.dayTimeout = setTimeout(() => {\r\n      this.setState({ today: new Date() }, this.clearDayTimeout);\r\n    }, ms);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { date, onDateChanged } = this.props;\r\n    const { date: prevDate } = prevProps;\r\n    const dateMatch = date === prevDate || isSameDay(date, prevDate);\r\n\r\n    !dateMatch &&\r\n      this.setState(this.resolveStateFromDate(date), () => {\r\n        typeof onDateChanged === \"function\" && onDateChanged(date);\r\n      });\r\n  }\r\n\r\n  clearDayTimeout = () => {\r\n    this.dayTimeout && clearTimeout(this.dayTimeout);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.clearPressureTimer();\r\n    this.clearDayTimeout();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Styled.CalendarContainer>\r\n        {this.renderMonthAndYear()}\r\n\r\n        <Styled.CalendarGrid>\r\n          <Fragment>{Object.keys(WEEK_DAYS).map(this.renderDayLabel)}</Fragment>\r\n\r\n          <Fragment>{this.getCalendarDates().map(this.renderCalendarDate)}</Fragment>\r\n        </Styled.CalendarGrid>\r\n      </Styled.CalendarContainer>\r\n    );\r\n  }\r\n}\r\n\r\nCalendar.propTypes = {\r\n  date: PropTypes.instanceOf(Date),\r\n  onDateChanged: PropTypes.func\r\n};\r\n\r\nexport default Calendar;\r\n","import styled from \"styled-components\";\r\nimport { FormGroup, Label, Input, Dropdown, DropdownToggle, DropdownMenu } from \"reactstrap\";\r\n\r\nexport const DatePickerContainer = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const DatePickerFormGroup = styled(FormGroup)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  width: 100%;\r\n  border: 2px solid #06c;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const DatePickerLabel = styled(Label)`\r\n  margin: 0;\r\n  padding: 0 2rem;\r\n  font-weight: 600;\r\n  font-size: 0.7rem;\r\n  letter-spacing: 2px;\r\n  text-transform: uppercase;\r\n  color: #06c;\r\n  border-right: 2px solid #06c;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgba(0, 102, 204, 0.05);\r\n`;\r\n\r\nexport const DatePickerInput = styled(Input)`\r\n  padding: 1rem 2rem;\r\n  font-weight: 500;\r\n  font-size: 1rem;\r\n  color: #333;\r\n  box-shadow: none;\r\n  border: none;\r\n  text-align: center;\r\n  letter-spacing: 1px;\r\n  background: transparent !important;\r\n  display: flex;\r\n  align-items: center;\r\n  ::placeholder {\r\n    color: #999;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nexport const DatePickerDropdown = styled(Dropdown)`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nexport const DatePickerDropdownToggle = styled(DropdownToggle)`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: transparent;\r\n  opacity: 0;\r\n  filter: alpha(opacity=0);\r\n`;\r\n\r\nexport const DatePickerDropdownMenu = styled(DropdownMenu)`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  border: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  transform: none !important;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Calendar from \"../Calendar\";\r\nimport * as Styled from \"./styles\";\r\nimport { isDate, getDateISO } from \"../../util/calendar\";\r\n\r\nclass Datepicker extends React.Component {\r\n  state = { date: null, calendarOpen: false };\r\n\r\n  toggleCalendar = () => this.setState({ calendarOpen: !this.state.calendarOpen });\r\n\r\n  handleChange = evt => evt.preventDefault();\r\n\r\n  handleDateChange = date => {\r\n    const { onDateChanged } = this.props;\r\n    const { date: currentDate } = this.state;\r\n    const newDate = date ? getDateISO(date) : null;\r\n\r\n    currentDate !== newDate &&\r\n      this.setState({ date: newDate, calendarOpen: false }, () => {\r\n        typeof onDateChanged === \"function\" && onDateChanged(this.state.date);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { value: date } = this.props;\r\n    const newDate = date && new Date(date);\r\n\r\n    isDate(newDate) && this.setState({ date: getDateISO(newDate) });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { value: date } = this.props;\r\n    const { value: prevDate } = prevProps;\r\n    const dateISO = getDateISO(new Date(date));\r\n    const prevDateISO = getDateISO(new Date(prevDate));\r\n\r\n    dateISO !== prevDateISO && this.setState({ date: dateISO });\r\n  }\r\n\r\n  render() {\r\n    const { label } = this.props;\r\n    const { date, calendarOpen } = this.state;\r\n\r\n    return (\r\n      <Styled.DatePickerContainer>\r\n        <Styled.DatePickerFormGroup>\r\n          <Styled.DatePickerLabel>{label || \"Enter Date\"}</Styled.DatePickerLabel>\r\n\r\n          <Styled.DatePickerInput\r\n            type=\"text\"\r\n            value={date ? date.split(\"-\").join(\" / \") : \"\"}\r\n            onChange={this.handleChange}\r\n            readOnly=\"readonly\"\r\n            placeholder=\"YYYY / MM / DD\"\r\n          />\r\n        </Styled.DatePickerFormGroup>\r\n\r\n        <Styled.DatePickerDropdown isOpen={calendarOpen} toggle={this.toggleCalendar}>\r\n          <Styled.DatePickerDropdownToggle color=\"transparent\" />\r\n\r\n          <Styled.DatePickerDropdownMenu>\r\n            {calendarOpen && (\r\n              <Calendar date={date && new Date(date)} onDateChanged={this.handleDateChange} />\r\n            )}\r\n          </Styled.DatePickerDropdownMenu>\r\n        </Styled.DatePickerDropdown>\r\n      </Styled.DatePickerContainer>\r\n    );\r\n  }\r\n}\r\n\r\nDatepicker.propTypes = {\r\n  label: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onDateChanged: PropTypes.func\r\n};\r\n\r\nexport default Datepicker;\r\n","import React, { Component } from \"react\";\nimport Datepicker from \"./components/Datepicker\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"w-25 py-5 my-5 mx-auto\">\n        <Datepicker label=\"Birthday\" value=\"2000-08-15\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}